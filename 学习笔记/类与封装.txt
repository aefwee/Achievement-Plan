一.描述类的介绍和使用
1.类和对象的关系
类是对现实生活中一类具有共同属性和行为的事物的抽象。
对象是能够看得到摸的着的真实存在的实体。

2.类的定义
类是Java程序的基本组成单位。
类的组成：
属性：在类中通过成员变量来体现（类中方法外的变量）。
行为：在类中通过成员方法来体现（和前面方法相比去掉static关键字即可）。
类的定义步骤：定义类；编写类的成员变量；编写类的成员方法。
public class 类名{
//成员变量    //成员方法….}

3.对象的使用
创建对象。 格式：类名  对象名 = new  类名 ();
                        Phone   p   = new  Phone();
使用对象：
（1）使用成员变量。格式：对象名.变量名     p.brand
（2）使用成员方法。格式：对象名.方法名()    p.call()
 
4.成员变量和局部变量
成员变量               ｜局部变量                        ｜ 区别
类中方法外            ｜方法内或方法声明上         ｜类中位置不同
堆内存                  ｜栈内存                           ｜内存中位置不同
随对象存在而存在，｜随着方法的调用而存在，   ｜生命周期不同
随对象消失而消失   ｜随方法调用完毕而消失      ｜
有默认的初始值      ｜必须先定义，赋值才能使用｜初始化值不同

二.封装
1.private关键字
是一个权限修饰符；可以修饰成员；
作用是保护成员不被别的类使用，被private修饰的成员只在本类中才能访问。
针对private修饰的成员变量，如果需要被其他类使用，提供相应操作：
（1）提供“get变量名()”方法，用于获取成员变量的值，方法用public修饰。
（2）提供“set变量名(参数)”方法，用于设置成员变量的值，方法用public修饰。

2.this关键字
this代表所在类的对象引用，方法被哪个对象调用，this就代表哪个对象。
this修饰的变量用于指代成员变量：
方法的形参如果与成员变量同名，不带this修饰的变量指的是形参，而不是成员变量。
方法的形参如果没有与成员变量同名，不带this修饰的变量指的是成员变量。

3.封装
封装是面向对象三大特征之一（封装，继承，多态）
是面向对象编程语言对客观世界的模拟，客观世界成员变量都是隐藏在对象内部的，外界无法直接操作
封装原则：将类的某些信息隐藏在类内部，不允许外部程序直接访问，而是通过该类提供的方法来实现对隐藏信息的操作和访问成员变量private，提供对应的get()/set()方法。
封装的好处：通过方法来控制成员变量的操作，提高了代码的安全性。
把代码用方法进行封装，提高了代码的复用性。

4.构造方法
构造方法是一种特殊的方法。作用：创建对象。
格式：public class 类名{
              修饰符  类名 (参数){ 
              }
          }
功能：主要是完成对象数据的初始化。
注意事项：
（1）构造方法的创建：如果没有定义构造方法，系统将给出一个默认的无参数构造方法。
如果定义了构造方法，系统将不再提供默认的构造方法。
（2）构造方法的重载：
如果自定义了带参数构造方法，还要使用无参数构造方法，就必须再写一个无参数构造方法。
（3）推荐的使用方式：
无论是否使用，都手工书写无参数构造方法。
