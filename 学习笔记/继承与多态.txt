一.继承
1.继承概述
继承是面向对象三大特征之一。可以使得子类具有父类的属性和方法，还可以在子类中重新定义，追加属性和方法。
继承的格式：public class 子类名 extends 父类名{ }
范例：public class Zi extends Fu { }
Fu：是父类，也称为基类、超类。
Zi：是子类，也称为派生类。
继承中子类的特点：
子类可以有父类的内容，子类还可以有自己特有的内容。
继承的好处：
提高了代码的复用性（多个类相同的的成员可以放到同一个类中）
提高了代码的维护性（如果方法的代码需要修改，修改一处即可）
继承弊端：
继承让类与类之间产生了关系, 类的耦合性增强了，当类发生变化时子类实现也不得不跟着变化,削弱了子类的独立性
什么时候使用继承?
●继承体现的关系: is a
●假设法:我有两个类A和B,如果他们满足A是B的一种,或者B是A的一种,就说明他们存在继承关系，这个时候就可以考虑使用继承来体现，否则就不能滥用继承
●举例: 苹果和水果,猫和动物，猫和狗

2.super关键字
super关键字的用法和this关键字的用法相似
this:代表本类对象的引用
super:代表父类存储空间的标识（可以理解为父类对象引用）

关键字	访问成员变量	访问构造方法	访问成员方法
this	this.成员变量，访问本类成员变量	this(..)，访问本类构造方法	this.成员方法(..)，访问本类成员方法
super	super.成员变量，访问父类成员变量	super(..)，访问父类构造方法	super.成员方法(..)，访问父类成员方法
3.继承中构造方法的访问特点
子类中所有的构造方法默认都会访父类中无参的构造方法
为什么呢?
●因为子类会继承父类中的数据,可还会用父类的数据。所以，初始化之前，一 定要先完成父类数据的初始化
●每一个子类构造方法的第一语句默认都是: super()
如果父类中没有无参构造方法，只有带参构造方法，怎么办呢?
●通过使用super关键字去显示的调用父类的带参构造方法
●在父类中自己提供 一个无参构造方法
推荐:自己给出无参构造方法

4.方法重写
方法重写概述
●子类中出现了和父类中一模一样的方法声明
方法重写的应用
●当子类需要父类的功能， 而功能主体子类有自己特有内容时,可以重写父类中的方法，这样，即沿袭了父类
的功能，又定义了子类特有的内容
●练习: 手机类和新手机类
@Override
●是一个注解(注解后面会学习到)
●可以帮助我们检查重写方法的方法声明的正确性
方法重写的注意事项：
私有方法不能被重写（父类私有成员子类是不能继承的）
子类方法访问权限不能更低（public > 默认 > 私有）

5.Java中继承的注意事项
Java中类只支持单继承，不支持多继承。
例如：
public class Son extends Father,Mother{ }
是错误的。
Java中类支持多层继承。